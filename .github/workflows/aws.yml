

name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: 'us-east-1'                   
  ECR_REPOSITORY: 'multi-stage-app'           
                                              
                                              
                                              
                                              
  CONTAINER_NAME: MY_CONTAINER_NAME           
                                              

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      run: | 
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/z1y1w9c8
         

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t multi-stage-app .
        docker tag multi-stage-app:latest public.ecr.aws/z1y1w9c8/multi-stage-app:latest
        docker push public.ecr.aws/z1y1w9c8/multi-stage-app:latest
        

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-01-revision5.json
        container-name: multi-stage-app
        image: 804425018582.dkr.ecr.us-east-1.amazonaws.com/my-app:latest

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-01-revision.json
        service: serve
        cluster: multi-cluster
        wait-for-service-stability: true


  rollback:
    needs: deploy
    if: failure()
    runs-on: ubuntu-latest

    steps:
    - name: Rollback to Previous Task Definition
      run: |
        PREVIOUS_TASK_DEF="arn:aws:ecs:us-east-1:804425018582:task-definition/task-01:22"

        echo $PREVIOUS_TASK_DEF
        aws ecs update-service --cluster multi-cluster --service serve --task-definition $PREVIOUS_TASK_DEF --region us-east-1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Wait for Rollback to Complete
      run: |
        aws ecs wait services-stable --cluster multi-cluster --services serve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}


        
